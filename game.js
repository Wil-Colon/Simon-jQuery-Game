var buttonColours = ["green", "red", "yellow", "blue"];

//These two var will be the comparators for winning/losing statement
//pattern genrated by game
var gamePattern = [];

//pattern pressed by user clicks
var userClickedPattern = [];

var level = 0;

var answerCheck = 0;


//play sound and animation generated by game randomly//
function nextSequence() {
  userClickedPattern = [];
  $('h1').text('level ' + level++);

  randomNumber = Math.round(Math.random() * 3);

  randomChosenColour = buttonColours[randomNumber];

  //Create an array "GamePattern", and push randon chosen color in to it

  gamePattern.push(randomChosenColour);

  $("#" + randomChosenColour).fadeOut(10);
  $("#" + randomChosenColour).fadeIn(100);

  playSound(randomChosenColour);

  console.log(randomChosenColour);


};


//// This will start the game when any key is pressed
$(document).keypress(function() {
//Checking if pseudoclass "lost" is in body, if True, this will allow user to start game after losing but not reset game in middle of playing.
if ($('body').hasClass('lost') == true) {
  nextSequence();
  $('body').toggleClass('lost');
} else if (level < 1) {
    nextSequence();
  }
});




//logging all buttons clicked to an array "userClickedPattern"

//also Click animation

$(".btn").click(function() {
  var userChosenColour = $(this).attr("id");
  userClickedPattern.push(userChosenColour);
  currentColor = this;

  playSound(userChosenColour);

  $(currentColor).toggleClass("pressed");

  setTimeout(function() {
    $(currentColor).toggleClass("pressed");
  }, 100);


  correctAnswer();

});


function correctAnswer() {

  if (userClickedPattern.length == gamePattern.length && gamePattern[answerCheck] == userClickedPattern[answerCheck]) {
    setTimeout(function() {
      nextSequence();
    }, 1000);

    answerCheck = 0;

  } else if (gamePattern[answerCheck] == userClickedPattern[answerCheck]) {
    answerCheck++;


  } else {
    wrongAnswer();
  }
};


function wrongAnswer() {

  answerCheck = 0;
  level = 0;
  gamePattern = [];

    //Adding "lost" Pseudo Class as a check for when a player loses and wants to restart the game
  $('body').toggleClass('lost');

  $('body').toggleClass("game-over");
  setTimeout(function() {
    $('body').toggleClass("game-over");
  }, 100);
  $('h1').text("Game Over, Press Any Key to restart");

  playSound("wrong");
};




function playSound(name) {

  var newSound = new Audio("sounds/" + name + ".mp3");
  console.log(newSound)
  newSound.play();

  //
  // switch (name) {
  //   case "blue":
  //     var blueAudio = new Audio("sounds/blue.mp3");
  //     blueAudio.play();
  //     break;
  //
  //   case "green":
  //     var greenAudio = new Audio("sounds/green.mp3");
  //     greenAudio.play();
  //     break;
  //
  //   case "red":
  //     var redAudio = new Audio("sounds/red.mp3");
  //     redAudio.play();
  //     break;
  //
  //   case "yellow":
  //     var yellowAudio = new Audio("sounds/yellow.mp3");
  //     yellowAudio.play();
  //     break;
  //
  //   case "wrong":
  //     var wrongAudio = new Audio("sounds/wrong.mp3");
  //     wrongAudio.play();
  //     break;
  //
  //   default:
  //     console.log("just checking");
  // }
}
